import java.util.*;
class MemoryGame implements Game{
// just stubs of required functions

 boolean isWinner=false;
   String [][] grid = new String[6][6];
   int turnCount=0; 
   String msg = "";
   String symbols [] = new String [8];
   String symbol = "";
   int rowIndex = 0;
   int colIndex = 0;
   int match = 0; 
   
   MemoryGame(){
   setUp();}
   
   
   public void setUp(){
      isWinner = false;
      turnCount=0; 
   }
   public int getTurnCount(){
      return(turnCount);}

   public void initializeBoard(int boardIndex){ 
      for(int r = 0; r < boardIndex; r++){
      //row
         for(int c = 0; c < boardIndex; c++){
         //col
            grid[c][r] = "[]"; 
         }
      }
    }

   
     
   public boolean isValidBoard(int board){
      if (board == 2 || board == 4 || board == 6){
         return(true);}
      else{
         System.out.println("Please try again");
         return(false);
      } 
      
   }
   
   
   public void printGrid(int index){
      for (int row = 0; row < index; row++) {
         for (int col = 0; col < index; col++) {
            System.out.print(grid[row][col] + " ");
         }
         System.out.println();
      }
   }

   public boolean getMatch(){return false;}
   //found if it's matched and match++, match = boardChoice/2
   
   public int randomizeIndex(int boardChoice){}
   //randomize hidden items based on the grid
   //return index of row and col 
   
   public boolean compareTo(){return false;} 
   //compare if the grid has the same symbols 
   
   public String getSymbol(){}
   //return symbol and shuffling 
   
   public void takeTurn(int rowChoice, int colChoice){
   }
   //display hidden symbol in the grid 
   
   public boolean checkWinner(){return false;} 
   //get if match == boardChoice/2 
   
   public boolean isWinner(){return (false);}
    
   
   public String gameOverStatus(){return("inProgress");}
   
   public boolean isValidInput(int [] x){return(true);}


}// MemoryGame class
